{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogsItems/DialogsItems.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","components/hoc/WithAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogsItem","props","path","id","className","s","dialog","linkDialog","to","name","Message","message","maxLength","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","isAuth","dialogsItems","values","sendMessage","newMessageBody","mupStateToPropsRedirect","auth","WithAuthRedirect","Component","RedirectComponent","this","React","connect","compose","dispatch","sendMessageCreator"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,WAAa,4BAA4B,SAAW,0BAA0B,QAAU,2B,+FCY5MC,EARK,SAACC,GACjB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAO,yBAAKC,UAAWC,IAAEC,QACrB,kBAAC,IAAD,CAASF,UAAWC,IAAEE,WAAYC,GAAIN,GAAOD,EAAMQ,QCK5CC,EARC,SAACT,GAEb,OAAO,yBAAKG,UAAWC,IAAEM,SACrB,6BAAMV,EAAMU,W,yCC4BdC,EAAYC,YAAiB,IAiB7BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAhBL,SAACd,GACpB,OACI,0BAAMgB,SAAYhB,EAAMiB,cACpB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAY,CAACC,IAAUX,GACvBH,KAAM,iBACNe,YAAY,wBAEvB,6BACI,6CAQDC,EA7CC,SAACxB,GACb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAatB,KAAMsB,EAAEtB,KAAMN,GAAI4B,EAAE5B,QAC1E6B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,aAOnE,OAAKV,EAAMkC,OAEJ,yBAAK/B,UAAWC,IAAEwB,SACrB,yBAAKzB,UAAWC,IAAE+B,cACbR,GAEL,yBAAKxB,UAAWC,IAAE4B,UACd,6BACKD,GAEL,kBAAClB,EAAD,CAAqBG,SAdT,SAACoB,GACjBpC,EAAMqC,YAAYD,EAAOE,qBAGH,kBAAC,IAAD,CAAU/B,GAAG,Y,wCCjBvCgC,EAA0B,SAACd,GAAD,MAAW,CACrCS,OAAQT,EAAMe,KAAKN,SAcRO,EAXiB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAIC,KAAK5C,MAAMkC,OACP,kBAACQ,EAAcE,KAAK5C,OADE,kBAAC,IAAD,CAAUO,GAAK,eAHV,GACXsC,IAAMH,WAOtC,OADiCI,YAAQP,EAARO,CAAiCH,I,OCyBvDI,sBACXD,aAhBoB,SAACrB,GAErB,MAAO,CACHC,YAAaD,EAAMC,gBAGA,SAACsB,GACxB,MAAO,CACHX,YAAa,SAAC3B,GACVsC,EAASC,YAAmBvC,SAQpC+B,EAFWM,CAGbvB","file":"static/js/4.919fc420.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__9QA_K\",\"dialog\":\"Dialogs_dialog__A2opF\",\"dialogsItems\":\"Dialogs_dialogsItems__1nn0a\",\"linkDialog\":\"Dialogs_linkDialog__2LEl7\",\"messages\":\"Dialogs_messages__8l88-\",\"message\":\"Dialogs_message__1fNnG\"};","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogsItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return <div className={s.dialog}>\r\n        <NavLink className={s.linkDialog} to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\n\r\nexport default DialogsItem;\r\n","import React from 'react'\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n\r\n    return <div className={s.message}>\r\n        <div>{props.message}</div>\r\n    </div>\r\n};\r\n\r\n\r\nexport default Message;","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogsItem from \"./DialogsItems/DialogsItems\";\r\nimport Message from \"./Messages/Messages\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControl/FormsControl\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogsItem name={d.name} id={d.id}/>)\r\n    let messagesElements = state.messages.map(m => <Message message={m.message}/>)\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    };\r\n\r\n    if (!props.isAuth) return <Redirect to='/login'/>;\r\n\r\n    return <div className={s.dialogs}>\r\n        <div className={s.dialogsItems}>\r\n            {dialogsElements}\r\n        </div>\r\n        <div className={s.messages}>\r\n            <div>\r\n                {messagesElements}\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nconst maxLength = maxLengthCreator(50)\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit = {props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate = {[required, maxLength]}\r\n                       name =\"newMessageBody\"\r\n                       placeholder='Enter your message'/>\r\n            </div>\r\n            <div>\r\n                <button>send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mupStateToPropsRedirect = (state) =>({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to = '/login'/>\r\n            return  <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedRedirectComponent = connect(mupStateToPropsRedirect)(RedirectComponent)\r\n    return ConnectedRedirectComponent\r\n};\r\n\r\nexport default WithAuthRedirect;","import React from 'react'\r\nimport {sendMessageCreator} from \"../../Redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport WithAuthRedirect from \"../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n// const DialogsContainer = (props) => {\r\n//\r\n// let state = props.store.getState().dialogsPage;\r\n//\r\n//     let onNewMessageChange = (body) => {\r\n//         props.store.dispatch(updateNewMessageBodyCreator(body))\r\n//     };\r\n//     let onSendMessageClick = () => {\r\n//         props.store.dispatch(sendMessageCreator())\r\n//     }\r\n//     return (\r\n//         <Dialogs updateNewMessageBodyCreator ={onNewMessageChange}\r\n//                  sendMessage = {onSendMessageClick}\r\n//                  dialogsPage = {state}/>\r\n//     )\r\n// }\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (message) => {\r\n            dispatch(sendMessageCreator(message))\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}