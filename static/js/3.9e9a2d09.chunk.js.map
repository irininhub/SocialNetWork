{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHook","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","ProfileInfo","profile","className","s","content","block","avatar","src","photos","large","Preloader","Post","item","message","likes","MyPosts","React","memo","postsElements","posts","map","p","postsblock","AddPostFormRedux","onSubmit","values","addPost","newPostElement","maxLength","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","MyPostsContainer","connect","state","profilePage","dispatch","newPostText","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.9e9a2d09.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__3pXMq\",\"block\":\"ProfileInfo_block__nZNC9\",\"avatar\":\"ProfileInfo_avatar__1U6qH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsblock\":\"MyPosts_postsblock__3LduG\",\"posts\":\"MyPosts_posts__3-g2t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3w8Vp\"};","import React, {useEffect, useState} from \"react\"\r\n\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    };\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '-------'}</span>\r\n                </div>}\r\n            { editMode &&\r\n                <div>\r\n                    <input autoFocus={true} onBlur={deactivateEditMode}\r\n                           value = {status}\r\n                           onChange={onStatusChange}\r\n                    />\r\n                </div>}\r\n        </div>);\r\n};\r\n\r\n\r\nexport default ProfileStatusWithHook","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHook from \"./ProfileStatusWithHook\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return <div className={s.content}>\r\n        {/*<div>*/}\r\n        {/*    <img src=\"http://www.ejin.ru/wp-content/uploads/2017/09/10-611.jpg\"/>*/}\r\n        {/*</div>*/}\r\n\r\n        <div className={s.block}>\r\n            <div className={s.avatar}>\r\n                <img src={props.profile.photos.large}/></div>\r\n            <ProfileStatusWithHook status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n};\r\n\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n\r\n    return <div className={s.item}>\r\n        <img src ='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT6FmOPt2sOxh1UoaxrNcWE6S29aHGGmqV50EGLiKzTaqpTCtLijg&s' />\r\n        {props.message}\r\n        <div>\r\n            <span>Likes {props.likes}</span>\r\n        </div>\r\n   </div>\r\n\r\n\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormsControl/FormsControl\";\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likes={p.likes}/>)\r\n\r\n    let AddPost = (values) => {\r\n        props.addPost(values.newPostElement)\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsblock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostFormRedux onSubmit={AddPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst maxLength = maxLengthCreator(30)\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostElement\"\r\n                       component={Textarea}\r\n                       validate = {[required, maxLength]}\r\n                       placeholder = 'New post text'\r\n                />\r\n\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddPostFormRedux = reduxForm({form: 'newPost'})(AddPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../Redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost:(newPostText) => {dispatch(addPostActionCreator(newPostText))}\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div>\r\n        <ProfileInfo  profile = {props.profile} status ={props.status} updateStatus = {props.updateStatus}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n\r\n};\r\n\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, updateStatus, getUserProfile} from \"../../Redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}